/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        //i will be doing it iteratively usign stack
        vector<int> ans;
        stack<TreeNode*> Treestack;
        if(root == NULL) return ans;
        TreeNode* prev = NULL;
        do{
            if(root == NULL){
                while(!Treestack.empty() && (Treestack.top()->right == NULL || Treestack.top()->right == prev)) {
                    ans.push_back(Treestack.top()->val);
                    prev = Treestack.top();
                    Treestack.pop();
                }
                if (Treestack.empty()) continue;
                root = Treestack.top()->right;
            }
            else{
                Treestack.push(root);
                root = root->left;
            }
        }while(!Treestack.empty());
        return ans;
    }
};
